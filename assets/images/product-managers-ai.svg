import React from 'react';

const AnimatedPMAI = () => {
  return (
    <div className="w-full max-w-4xl mx-auto p-4">
      <svg 
        viewBox="0 0 800 600" 
        className="w-full h-auto"
      >
        <defs>
          <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" className="animate-pulse" style={{ stopColor: '#f8f9fa', stopOpacity: 1 }}>
              <animate 
                attributeName="stop-color" 
                values="#f8f9fa;#e9ecef;#f8f9fa" 
                dur="4s" 
                repeatCount="indefinite" 
              />
            </stop>
            <stop offset="100%" style={{ stopColor: '#e9ecef', stopOpacity: 1 }} />
          </linearGradient>

          {/* Animation definitions */}
          <animate 
            xlinkHref="#brain-circle"
            attributeName="r"
            values="75;85;75"
            dur="3s"
            repeatCount="indefinite"
          />
        </defs>

        {/* Background */}
        <rect width="800" height="600" fill="url(#bgGradient)" />

        {/* Central Brain Icon with Pulse Animation */}
        <g transform="translate(350,250)">
          <circle 
            id="brain-circle"
            cx="50" 
            cy="50" 
            r="80" 
            fill="#4a90e2" 
            opacity="0.1"
          >
            <animate
              attributeName="opacity"
              values="0.1;0.3;0.1"
              dur="2s"
              repeatCount="indefinite"
            />
          </circle>

          {/* Animated Circuit Paths */}
          <path 
            d="M20,50 C20,30 80,30 80,50 C80,70 20,70 20,50" 
            fill="none" 
            stroke="#4a90e2" 
            strokeWidth="3"
            className="animate-pulse"
          >
            <animate
              attributeName="stroke-dashoffset"
              values="0;100;0"
              dur="3s"
              repeatCount="indefinite"
            />
          </path>

          <path 
            d="M50,20 C70,20 70,80 50,80 C30,80 30,20 50,20" 
            fill="none" 
            stroke="#4a90e2" 
            strokeWidth="3"
          >
            <animate
              attributeName="stroke-dashoffset"
              values="0;100;0"
              dur="3s"
              repeatCount="indefinite"
            />
          </path>
        </g>

        {/* Animated Kanban Board */}
        <g transform="translate(200,200)" className="transition-transform hover:scale-110">
          <rect 
            x="0" 
            y="0" 
            width="100" 
            height="150" 
            rx="10" 
            fill="#27ae60" 
            opacity="0.2"
          >
            <animate
              attributeName="opacity"
              values="0.2;0.4;0.2"
              dur="4s"
              repeatCount="indefinite"
            />
          </rect>
          <rect x="10" y="20" width="80" height="20" rx="5" fill="#27ae60" opacity="0.4">
            <animate
              attributeName="x"
              values="10;15;10"
              dur="2s"
              repeatCount="indefinite"
            />
          </rect>
          <rect x="10" y="50" width="80" height="20" rx="5" fill="#27ae60" opacity="0.4">
            <animate
              attributeName="x"
              values="10;15;10"
              dur="2s"
              repeatCount="indefinite"
              begin="0.5s"
            />
          </rect>
          <rect x="10" y="80" width="80" height="20" rx="5" fill="#27ae60" opacity="0.4">
            <animate
              attributeName="x"
              values="10;15;10"
              dur="2s"
              repeatCount="indefinite"
              begin="1s"
            />
          </rect>
        </g>

        {/* Animated Data Visualization */}
        <g transform="translate(500,200)">
          <rect 
            x="0" 
            y="0" 
            width="100" 
            height="150" 
            rx="10" 
            fill="#8e44ad" 
            opacity="0.2"
          />
          <path 
            d="M10,120 L30,80 L50,100 L70,60 L90,90" 
            fill="none" 
            stroke="#8e44ad" 
            strokeWidth="2"
          >
            <animate
              attributeName="d"
              values="M10,120 L30,80 L50,100 L70,60 L90,90;M10,100 L30,90 L50,70 L70,85 L90,60;M10,120 L30,80 L50,100 L70,60 L90,90"
              dur="4s"
              repeatCount="indefinite"
            />
          </path>
        </g>

        {/* Animated Connection Lines */}
        <g stroke="#2c3e50" strokeWidth="2" strokeDasharray="5,5" opacity="0.3">
          <path 
            d="M300,275 C350,275 400,275 450,275"
          >
            <animate
              attributeName="stroke-dashoffset"
              values="0;100;0"
              dur="3s"
              repeatCount="indefinite"
            />
          </path>
          <path 
            d="M500,275 C550,275 600,275 650,275"
          >
            <animate
              attributeName="stroke-dashoffset"
              values="0;100;0"
              dur="3s"
              repeatCount="indefinite"
            />
          </path>
        </g>

        {/* Labels */}
        <g 
          className="text-sm md:text-base lg:text-lg"
          style={{ fontFamily: 'Arial' }}
          fill="#2c3e50"
        >
          <text x="400" y="150" textAnchor="middle" fontWeight="bold">Product Management + AI</text>
          <text x="250" y="180" textAnchor="middle">Planning</text>
          <text x="550" y="180" textAnchor="middle">Analytics</text>
        </g>
      </svg>
    </div>
  );
};

export default AnimatedPMAI;
